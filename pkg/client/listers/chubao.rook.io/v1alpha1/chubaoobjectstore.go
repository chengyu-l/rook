/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/rook/rook/pkg/apis/chubao.rook.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ChubaoObjectStoreLister helps list ChubaoObjectStores.
type ChubaoObjectStoreLister interface {
	// List lists all ChubaoObjectStores in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ChubaoObjectStore, err error)
	// ChubaoObjectStores returns an object that can list and get ChubaoObjectStores.
	ChubaoObjectStores(namespace string) ChubaoObjectStoreNamespaceLister
	ChubaoObjectStoreListerExpansion
}

// chubaoObjectStoreLister implements the ChubaoObjectStoreLister interface.
type chubaoObjectStoreLister struct {
	indexer cache.Indexer
}

// NewChubaoObjectStoreLister returns a new ChubaoObjectStoreLister.
func NewChubaoObjectStoreLister(indexer cache.Indexer) ChubaoObjectStoreLister {
	return &chubaoObjectStoreLister{indexer: indexer}
}

// List lists all ChubaoObjectStores in the indexer.
func (s *chubaoObjectStoreLister) List(selector labels.Selector) (ret []*v1alpha1.ChubaoObjectStore, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChubaoObjectStore))
	})
	return ret, err
}

// ChubaoObjectStores returns an object that can list and get ChubaoObjectStores.
func (s *chubaoObjectStoreLister) ChubaoObjectStores(namespace string) ChubaoObjectStoreNamespaceLister {
	return chubaoObjectStoreNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ChubaoObjectStoreNamespaceLister helps list and get ChubaoObjectStores.
type ChubaoObjectStoreNamespaceLister interface {
	// List lists all ChubaoObjectStores in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ChubaoObjectStore, err error)
	// Get retrieves the ChubaoObjectStore from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ChubaoObjectStore, error)
	ChubaoObjectStoreNamespaceListerExpansion
}

// chubaoObjectStoreNamespaceLister implements the ChubaoObjectStoreNamespaceLister
// interface.
type chubaoObjectStoreNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ChubaoObjectStores in the indexer for a given namespace.
func (s chubaoObjectStoreNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ChubaoObjectStore, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChubaoObjectStore))
	})
	return ret, err
}

// Get retrieves the ChubaoObjectStore from the indexer for a given namespace and name.
func (s chubaoObjectStoreNamespaceLister) Get(name string) (*v1alpha1.ChubaoObjectStore, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("chubaoobjectstore"), name)
	}
	return obj.(*v1alpha1.ChubaoObjectStore), nil
}
