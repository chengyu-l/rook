/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/rook/rook/pkg/apis/chubao.rook.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ChubaoClusterLister helps list ChubaoClusters.
type ChubaoClusterLister interface {
	// List lists all ChubaoClusters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ChubaoCluster, err error)
	// ChubaoClusters returns an object that can list and get ChubaoClusters.
	ChubaoClusters(namespace string) ChubaoClusterNamespaceLister
	ChubaoClusterListerExpansion
}

// chubaoClusterLister implements the ChubaoClusterLister interface.
type chubaoClusterLister struct {
	indexer cache.Indexer
}

// NewChubaoClusterLister returns a new ChubaoClusterLister.
func NewChubaoClusterLister(indexer cache.Indexer) ChubaoClusterLister {
	return &chubaoClusterLister{indexer: indexer}
}

// List lists all ChubaoClusters in the indexer.
func (s *chubaoClusterLister) List(selector labels.Selector) (ret []*v1alpha1.ChubaoCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChubaoCluster))
	})
	return ret, err
}

// ChubaoClusters returns an object that can list and get ChubaoClusters.
func (s *chubaoClusterLister) ChubaoClusters(namespace string) ChubaoClusterNamespaceLister {
	return chubaoClusterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ChubaoClusterNamespaceLister helps list and get ChubaoClusters.
type ChubaoClusterNamespaceLister interface {
	// List lists all ChubaoClusters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ChubaoCluster, err error)
	// Get retrieves the ChubaoCluster from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ChubaoCluster, error)
	ChubaoClusterNamespaceListerExpansion
}

// chubaoClusterNamespaceLister implements the ChubaoClusterNamespaceLister
// interface.
type chubaoClusterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ChubaoClusters in the indexer for a given namespace.
func (s chubaoClusterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ChubaoCluster, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChubaoCluster))
	})
	return ret, err
}

// Get retrieves the ChubaoCluster from the indexer for a given namespace and name.
func (s chubaoClusterNamespaceLister) Get(name string) (*v1alpha1.ChubaoCluster, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("chubaocluster"), name)
	}
	return obj.(*v1alpha1.ChubaoCluster), nil
}
